---
import type { ImageMetadata } from "astro";
import { getImage } from "astro:assets";

interface Props {
  filename?: string | undefined;
  alt?: string | undefined;
  eager?: boolean | undefined;
  class?: string | undefined;
  aspectRatio: number | undefined;
  sizes?: string | undefined;
}
const { props } = Astro;

const imagePath = "../assets/" + props.filename ?? "placeholder-hero.jpg";

const images = import.meta.glob<ImageMetadata>("../assets/*", {
  import: "default",
});

const imagesrc = await images[imagePath]?.();

const image = imagesrc
  ? await getImage({
      src: imagesrc,
      alt: "",
      aspectRatio: props.aspectRatio,
      width: 720,
      format: "webp",
    })
  : undefined;
---

{
  imagesrc && (
    <div
      style={{
        paddingBottom: props.aspectRatio
          ? `${100 / props.aspectRatio}%`
          : "auto",
      }}
      class={"overflow-hidden relative w-full" + props?.class}
    >
      <img
        class="object-cover w-full h-full absolute"
        loading={props.eager ? "eager" : "lazy"}
        src={image?.src}
        alt={props.alt ?? ""}
      />
    </div>
  )
}
